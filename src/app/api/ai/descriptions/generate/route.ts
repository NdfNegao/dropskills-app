import { NextRequest, NextResponse } from 'next/server';
import { generateAIContentWithProvider } from '@/lib/openai';

export async function POST(request: NextRequest) {
  try {
    const { productName, category, targetAudience, features, benefits, tone } = await request.json();

    // Validation des donn√©es
    if (!productName || !category) {
      return NextResponse.json(
        { error: 'Le nom du produit et la cat√©gorie sont requis' },
        { status: 400 }
      );
    }

    // Construction du prompt optimis√©
    const prompt = buildDescriptionsPrompt({ 
      productName, 
      category, 
      targetAudience, 
      features, 
      benefits, 
      tone 
    });

    // G√©n√©ration avec OpenAI
    const response = await generateAIContentWithProvider(
      prompt, 
      'descriptions', 
      0.8, 
      1000,
      'Tu es un expert en copywriting et marketing digital. Cr√©e des descriptions produits persuasives et optimis√©es SEO en fran√ßais.'
    );

    // Parsing des descriptions (format JSON attendu)
    let descriptions: string[] = [];
    try {
      const parsed = JSON.parse(response.content);
      descriptions = parsed.descriptions || [];
    } catch {
      // Fallback: split par lignes si pas JSON
      descriptions = response.content
        .split('\n')
        .filter(line => line.trim())
        .map(line => line.replace(/^\d+\.\s*/, '').trim())
        .filter(desc => desc.length > 50) // Descriptions minimum 50 caract√®res
        .slice(0, 5);
    }

    return NextResponse.json({
      descriptions,
      usage: response.usage,
      provider: response.provider,
      costSavings: response.costSavings
    });

  } catch (error) {
    console.error('Erreur g√©n√©ration descriptions:', error);
    return NextResponse.json(
      { error: 'Erreur lors de la g√©n√©ration des descriptions' },
      { status: 500 }
    );
  }
}

function buildDescriptionsPrompt({ 
  productName, 
  category, 
  targetAudience, 
  features, 
  benefits, 
  tone 
}: {
  productName: string;
  category: string;
  targetAudience?: string;
  features?: string;
  benefits?: string;
  tone?: string;
}) {
  const audienceText = targetAudience ? ` pour ${targetAudience}` : '';
  const featuresText = features ? `\nFonctionnalit√©s cl√©s : ${features}` : '';
  const benefitsText = benefits ? `\nB√©n√©fices : ${benefits}` : '';
  const toneText = tone ? getToneDescription(tone) : 'professionnelles et engageantes';

  return `G√©n√®re 5 descriptions ${toneText} pour le produit "${productName}" dans la cat√©gorie ${category}${audienceText}.

INFORMATIONS PRODUIT:
- Nom : ${productName}
- Cat√©gorie : ${category}${featuresText}${benefitsText}
- Audience cible : ${targetAudience || 'Grand public'}

CONTRAINTES:
- Descriptions en fran√ßais
- Entre 80 et 150 mots par description
- Utilise des √©mojis pertinents (2-3 par description)
- Varie les angles d'approche (b√©n√©fices, fonctionnalit√©s, √©motions, r√©sultats)
- Optimis√©es pour la conversion
- Inclus des mots-cl√©s pertinents pour le SEO

STYLE ${(tone || 'professionnel').toUpperCase()}:
${getToneGuidelines(tone || 'professionnel')}

FORMAT DE R√âPONSE (JSON uniquement):
{
  "descriptions": [
    "üöÄ Description 1 compl√®te ici...",
    "üí° Description 2 compl√®te ici...",
    "‚ú® Description 3 compl√®te ici...",
    "üéØ Description 4 compl√®te ici...",
    "‚≠ê Description 5 compl√®te ici..."
  ]
}`;
}

function getToneDescription(tone: string): string {
  const tones = {
    'professionnel': 'professionnelles et cr√©dibles',
    'commercial': 'commerciales et persuasives',
    'emotionnel': '√©motionnelles et engageantes',
    'technique': 'techniques et d√©taill√©es',
    'casual': 'd√©contract√©es et accessibles'
  };
  return tones[tone as keyof typeof tones] || 'professionnelles et engageantes';
}

function getToneGuidelines(tone: string): string {
  const guidelines = {
    'professionnel': '- Ton expert et cr√©dible\n- Focus sur la qualit√© et les r√©sultats\n- √âvite les superlatifs excessifs\n- Utilise un vocabulaire pr√©cis',
    'commercial': '- Ton persuasif et orient√© vente\n- Cr√©e de l\'urgence et du d√©sir\n- Met en avant les b√©n√©fices clients\n- Utilise des preuves sociales',
    'emotionnel': '- Connecte avec les √©motions\n- Raconte une histoire\n- √âvoque des situations concr√®tes\n- Utilise "vous" pour personnaliser',
    'technique': '- D√©taille les sp√©cifications\n- Utilise un vocabulaire technique\n- Explique le fonctionnement\n- Met en avant l\'innovation',
    'casual': '- Ton d√©contract√© et amical\n- Utilise un langage simple\n- √âvite le jargon technique\n- Reste accessible √† tous'
  };
  return guidelines[tone as keyof typeof guidelines] || 'Sois professionnel et engageant';
}